set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

Plugin 'scrooloose/nerdtree.git'
Plugin 'Xuyuanp/nerdtree-git-plugin.git'
Plugin 'tpope/vim-fugitive.git'
Plugin 'ctrlpvim/ctrlp.vim.git'
Plugin 'flazz/vim-colorschemes'
Plugin 'ternjs/tern_for_vim'
Plugin 'bfredl/nvim-ipy'
Plugin 'xuhdev/vim-latex-live-preview'

" Java
Plugin 'Shougo/deoplete.nvim'
Plugin 'artur-shaik/vim-javacomplete2'

Plugin 'pangloss/vim-javascript'  " javascript syntaxt highlight
Plugin 'mxw/vim-jsx'              " ReactJS sytaxt highlight

" Python folding
Plugin 'tmhedberg/SimpylFold'

Plugin 'fatih/vim-go'

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line

set tabstop=2
set shiftwidth=2
set softtabstop=2
set expandtab

set nobackup                                " do not keep a backup file
:autocmd BufLeave,FocusLost * silent! wall  " autosave on focus lost

set relativenumber
set hlsearch        " highlight searches
set ignorecase      " ignore case when searching
set smartcase       " no ignorecase if Uppercase char is present

set encoding=utf-8
set autoindent

set colorcolumn=80

set list
set listchars=tab:▸\ ,eol:¬

set laststatus=2
set statusline=%.25F\ %{fugitive#statusline()}\ %l/%L

nnoremap <up> <nop>
nnoremap <down> <nop>
nnoremap <left> <nop>
nnoremap <right> <nop>
inoremap <up> <nop>
inoremap <down> <nop>
inoremap <left> <nop>
inoremap <right> <nop>

inoremap <F1> <ESC>
nnoremap <F1> <ESC>
vnoremap <F1> <ESC>

nnoremap <C-J> <C-W><C-J> "Ctrl-j to move down a split
nnoremap <C-K> <C-W><C-K> "Ctrl-k to move up a split
nnoremap <C-L> <C-W><C-L> "Ctrl-l to move right a split
nnoremap <C-H> <C-W><C-H> "Ctrl-h to move left a split

nnoremap <Tab> :bnext<CR>
nnoremap <S-Tab> :bprevious<CR>

colorscheme molokai

set guifont=Monospace\ 15
set guioptions-=m  "remove menu bar
set guioptions-=T  "remove toolbar
set guioptions-=r  "remove right-hand scroll bar
set guioptions-=L  "remove left-hand scroll bar

set nowrap

" Octave syntax
augroup filetypedetect
  au! BufRead,BufNewFile *.m,*.oct set filetype=octave
augroup END

" Javascript syntax
" mxw/vim-js: enable JSX syntax in .js files (default is only .jsx files)
let g:jsx_ext_required = 0

" vim-javascript plugin
let g:javascript_plugin_flow = 1 " sytax highlight for Flow
set foldmethod=syntax

let g:javascript_conceal_function       = "ƒ"
let g:javascript_conceal_null           = "ø"
let g:javascript_conceal_undefined      = "¿"
let g:javascript_conceal_NaN            = "ℕ"
let g:javascript_conceal_prototype      = "¶"
let g:javascript_conceal_arrow_function = "⇒"

" to avoid switching between keyboards
set langmap=ФИСВУАПРШОЛДЬТЩЗЙКЫЕГМЦЧНЯ;ABCDEFGHIJKLMNOPQRSTUVWXYZ,фисвуапршолдьтщзйкыегмцчня;abcdefghijklmnopqrstuvwxyz

" public/ui ← swagger directory
let g:ctrlp_custom_ignore = {
  \ 'dir': '\v(node_modules|build|vendor|public\/ui)$',
  \ 'file': '\v\.(ico|jpg|png|ttf|woff|otf|svg|eot|\.min\.)$'
  \ }

" tern
let g:tern_map_keys=1
let g:tern_show_argument_hints='on_hold'
" nodejs should be in PATH for launching tern server
let $PATH .= ':/home/vladimir/.nvm/versions/node/v6.0.0/bin'

set cursorline

set wildmenu

autocmd Bufread,BufNewFile *.md set filetype=markdown " Vim interprets .md as 'modula2' otherwise, see :set filetype?
autocmd BufWritePost *.go :GoErrCheck
autocmd Bufread ~/.kube/config set filetype=json " kubernetes config
autocmd Bufread fluentd.conf set filetype=fluentd
autocmd FileType xml set noexpandtab

" Use deoplete
let g:deoplete#enable_at_startup = 1

" Java section
autocmd FileType java set noexpandtab
autocmd FileType java setlocal omnifunc=javacomplete#Complete
nmap <leader>jI <Plug>(JavaComplete-Imports-AddMissing)
nmap <leader>jR <Plug>(JavaComplete-Imports-RemoveUnused)
nmap <leader>ji <Plug>(JavaComplete-Imports-AddSmart)
nmap <leader>jii <Plug>(JavaComplete-Imports-Add)

imap <C-j>I <Plug>(JavaComplete-Imports-AddMissing)
imap <C-j>R <Plug>(JavaComplete-Imports-RemoveUnused)
imap <C-j>i <Plug>(JavaComplete-Imports-AddSmart)
imap <C-j>ii <Plug>(JavaComplete-Imports-Add)

set keymap=russian-jcukenwin
set iminsert=0
set imsearch=0
highlight lCursor guifg=NONE guibg=Cyan

" Don't give the intro message when starting Vim
set shortmess+=I

" For GVim - close editor window with confirmation
if has("gui_running")
  nnoremap ZZ :call QuitPrompt()<cr>
  cabbrev q call QuitPrompt()<cr>
  cabbrev wq call QuitPrompt()<cr>
endif

fun! QuitPrompt()
  let choice = confirm("Close?", "&yes\n&no", 1)
  if choice == 1 | q! | endif
endfun

" nvim specific settings
if has('nvim')
  let g:python3_host_prog = $CONDA_HOME.'/bin/python3.6'
endif
